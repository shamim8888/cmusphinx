/*********************************************************************
 *
 * $Header$
 *
 * CMU ARPA Speech Project
 *
 * Copyright (c) 1998 Carnegie Mellon University.
 * All rights reserved.
 *
 *********************************************************************
 *
 * File: cmd_ln_defn.h
 * 
 * Description: 
 * 	Command line definitions for map_adapt
 *
 * Author: 
 * 	David Huggins-Daines (dhuggins@cs.cmu.edu)
 *********************************************************************/

#ifndef CMD_LN_DEFN_H
#define CMD_LN_DEFN_H
const char helpstr[] = 
"Description: \n"
"\n"
"Given a speaker-independent (or other baseline) model and a\n"
"maximum-likelihood estimate of model parameters from adaptation\n"
"data, map_adapt will update (interpolate) the mean vectors to\n"
"maximize the a posteriori probability of the adaptation data.\n"
"\n"
"The ML estimate is generated by running a single iteration of\n"
"the forward-backward algorithm on the adaptation data, using the\n"
"baseline models as the initial estimate.  This can be accomplished\n"
"using the programs `bw' and `norm'.  The -mlmeanfn and -mlvarfn\n"
"arguments are the output parameter files created by `norm'.  The\n"
"-mlcountfn argument is the file containing observation counts,\n"
"which is generated with the -dcountfn argument to `norm'.\n";

const char examplestr[] =
"Example: \n"
"map_adapt -mapmeanfn map_model/means -mlmeanfn ml_model/means \\\n"
"          -mlvarfn ml_model/variances -simeanfn baseline/means \\\n"
"          -sivarfn baseline/variances -mlcntfn bwaccumdir/gauden_counts\n";

    static arg_def_t defn[] = {
	{ "-help",
	  CMD_LN_BOOLEAN,
	  CMD_LN_NO_VALIDATION,
	  "no",
	  "Shows the usage of the tool"},

	{ "-example",
	  CMD_LN_BOOLEAN,
	  CMD_LN_NO_VALIDATION,
	  "no",
	  "Shows example of how to use the tool"},

        { "-mapmeanfn",
          CMD_LN_STRING,
	  CMD_LN_NO_VALIDATION,
          CMD_LN_NO_DEFAULT,
          "The output MAP mean file"},

#if 0 /* Not possible yet */
        { "-mapvarfn",
          CMD_LN_STRING,
	  CMD_LN_NO_VALIDATION,
          CMD_LN_NO_DEFAULT,
          "The output MAP var file"},
#endif

        { "-simeanfn",
          CMD_LN_STRING,
	  CMD_LN_NO_VALIDATION,
          CMD_LN_NO_DEFAULT,
          "The input speaker-independent (baseline) mean file"},

        { "-sivarfn",
          CMD_LN_STRING,
	  CMD_LN_NO_VALIDATION,
          CMD_LN_NO_DEFAULT,
          "The input speaker-independent (baseline) var file"},

        { "-mlmeanfn",
          CMD_LN_STRING,
	  CMD_LN_NO_VALIDATION,
          CMD_LN_NO_DEFAULT,
          "The input ML mean file (output of `norm' on adaptation data)"},

        { "-mlvarfn",
          CMD_LN_STRING,
	  CMD_LN_NO_VALIDATION,
          CMD_LN_NO_DEFAULT,
          "The in ML var file (output of `norm' on adaptation data)"},

        { "-mlcntfn",
          CMD_LN_STRING,
	  CMD_LN_NO_VALIDATION,
          CMD_LN_NO_DEFAULT,
          "The ML total observation count (output of `norm -gaudnom') file"},

        { "-dnom_weight",
          CMD_LN_FLOAT32,
	  CMD_LN_NO_VALIDATION,
	  "1.0",
          "The prior adaptation weight"},
	
	{ NULL, CMD_LN_UNDEF, CMD_LN_NO_VALIDATION, CMD_LN_NO_DEFAULT, NULL }
    };


#endif /* CMD_LN_DEFN_H */ 


/*
 * Log record.  Maintained by RCS.
 *
 * $Log$
 * Revision 1.1  2005/06/01  16:37:46  dhdfu
 * add basic MAP adaptation support (means only)
 * 
 *
 */
