* Reduce elastic window size by splitting silences - DONE
* Sort entries before window_sf and track start frames - DONE
* Split fwdtree and fwdflat from ngram_search - DONE
* Give fwdflat its own bptbl - DONE
* Figure out bscorestack problems - DONE (apparently)

* Split bptbl into active and retired - DONE (hell yeah)
  - Retire bps to separate table - DONE
    * Partition the permute array into retired and active indices - DONE
    * Switch dest to the retired table in bptbl_compact - DONE
    * Do bp remapping in two parts again - DONE
  - Retire all remaining bps at end of utterance - DONE
  - Pull end frame finding into bptbl - DONE
  - Backtraces and lattice gen then refer to the retired portion - DONE
  - Test this on standalone fwdtree first - DONE

* Implement arc buffers - DONE (mostly)
  - Release old arcs - DONE
  - Rewrite bptbl and friends to use the new garray_t
    * Need to extend garray_t to include a base index
    * Then update arcbuffer code for this
    * This will also make it easier to transition to circular buffers

* Implement semi-shared acoustic models for search passes - DONE

* Make fwdflat work properly with arc buffer input - DONE

* Rewrite lattice generation to be incremental on retired bps
  - This is pretty similar to the arc buffer code

* Remove ngram_search_* and replace with new fwdflat and fwdtree
  - Hook these up to the pocketsphinx API

* Implement synchronized and generic arc buffers

* Replace bptbl arrays with ring queues

* Rewrite FSG search to use bptbl and arc buffers
  - Construct grammars from arc buffers / lattices
