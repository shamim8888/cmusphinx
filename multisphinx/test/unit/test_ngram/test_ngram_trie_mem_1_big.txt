This is what happens with a real language model:

 47 56,364,546,752    1,745,166,000    1,585,888,019   159,277,981            0
90.87% (1,585,888,019B) (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
->36.22% (632,101,696B) 0x4E3E8E9: garray_init (garray.c:63)
| ->36.22% (632,101,632B) 0x50A5580: ngram_trie_node_alloc (ngram_trie.c:127)
| | ->36.22% (632,101,568B) 0x50A647F: ngram_trie_add_successor (ngram_trie.c:512)
| | | ->36.22% (632,101,568B) 0x50A6FA7: add_ngram_line (ngram_trie.c:805)
| | |   ->36.22% (632,101,568B) 0x50A73C4: read_ngrams (ngram_trie.c:877)
| | |     ->36.22% (632,101,568B) 0x50A74BF: ngram_trie_read_arpa (ngram_trie.c:907)
| | |       ->36.22% (632,101,568B) 0x401029: main (test_ngram_trie.c:36)
| | |         
| | ->00.00% (64B) in 1+ places, all below ms_print's threshold (01.00%)
| | 
| ->00.00% (64B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->35.71% (623,221,472B) 0x4E3E958: garray_init (garray.c:71)
| ->35.71% (623,221,440B) 0x50A5580: ngram_trie_node_alloc (ngram_trie.c:127)
| | ->35.71% (623,221,440B) 0x50A647F: ngram_trie_add_successor (ngram_trie.c:512)
| | | ->35.71% (623,221,440B) 0x50A6FA7: add_ngram_line (ngram_trie.c:805)
| | |   ->35.71% (623,221,440B) 0x50A73C4: read_ngrams (ngram_trie.c:877)
| | |     ->35.71% (623,221,440B) 0x50A74BF: ngram_trie_read_arpa (ngram_trie.c:907)
| | |       ->35.71% (623,221,440B) 0x401029: main (test_ngram_trie.c:36)
| | |         
| | ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
| | 
| ->00.00% (32B) in 1+ places, all below ms_print's threshold (01.00%)
| 
->13.60% (237,295,344B) 0x50A5543: ngram_trie_node_alloc (ngram_trie.c:122)
| ->13.60% (237,295,344B) 0x50A647F: ngram_trie_add_successor (ngram_trie.c:512)
|   ->13.60% (237,295,344B) 0x50A6FA7: add_ngram_line (ngram_trie.c:805)
|     ->13.60% (237,295,344B) 0x50A73C4: read_ngrams (ngram_trie.c:877)
|       ->13.60% (237,295,344B) 0x50A74BF: ngram_trie_read_arpa (ngram_trie.c:907)
|         ->13.60% (237,295,344B) 0x401029: main (test_ngram_trie.c:36)
|           
->05.08% (88,592,128B) 0x4E3EADF: garray_reserve (garray.c:126)
| ->05.08% (88,592,128B) 0x4E3EB19: garray_expand (garray.c:134)
|   ->05.08% (88,592,128B) 0x4E3EBFB: garray_append (garray.c:157)
|   | ->05.08% (88,592,128B) 0x50A64E0: ngram_trie_add_successor (ngram_trie.c:517)
|   |   ->05.08% (88,592,128B) 0x50A6FA7: add_ngram_line (ngram_trie.c:805)
|   |     ->05.08% (88,592,128B) 0x50A73C4: read_ngrams (ngram_trie.c:877)
|   |       ->05.08% (88,592,128B) 0x50A74BF: ngram_trie_read_arpa (ngram_trie.c:907)
|   |         ->05.08% (88,592,128B) 0x401029: main (test_ngram_trie.c:36)
|   |           
|   ->00.00% (0B) in 1+ places, all below ms_print's threshold (01.00%)
|   
->00.27% (4,677,379B) in 1+ places, all below ms_print's threshold (01.00%)

Note how little memory is actually allocated in garray_expand - this
means that we are overallocating most successor arrays (makes sense
since most 2-grams only have a few successors, less than 8, at least)

Also leaf nodes don't need successor arrays - so we should allocate them lazily.
